{"version":3,"sources":["background/delaunay.js","background/moving-triangles.js"],"names":["pointInCircle","a","b","c","p","dx","x","dy","y","ex","ey","fx","fy","ap","bp","cp","sign","p1","p2","p3","pointInTriangle","pt","v1","v2","v3","d1","d2","d3","has_neg","has_pos","Node","key","vertices","children","node","push","TriangleGraph","nodes","Map","set","parentKeys","length","newNode","undefined","forEach","parentKey","parentNode","get","addChild","values","size","Vertex","pos","incEdge","id","HalfEdge","origin","twin","incFace","next","prev","Face","graphKey","Delaunay","points","debugCtx","halfEdges","faces","FAR_AWAY","tempPositions","i","triangleGraph","triangulate","point","triangle","containingTriangle","splitTriangle","newVertex","affectedEdges","edge","legalizeEdge","newHalfEdges","leftEdge","e1","e2","outerFaceEdges","getFaceHalfEdges","newFaces","e3","newFace","addNode","console","error","concat","face","adjacentFace","testPoint","incFaceEdge1","incFaceEdge2","faceEdge1","faceEdge2","getFaceVertices","currentNode","safety","foundChild","child","edges","Error","log","triangles","triangleIterator","getValues","value","ctx","beginPath","canvas","width","height","moveTo","lineTo","strokeStyle","lineWidth","stroke","Circle","color","radius","position","staticObject","visible","rotationSpeed","curveRate","angle","Math","random","PI","dAngle","rotationDirection","cos","sin","arc","fillStyle","fill","main","document","getElementById","getContext","resizeCanvas","fps","circleColor","drawEdges","lineColor","triangleColorGradient","numCircles","circleCurveRateRange","circleSpeedRange","circleRadiusRange","circles","idCounter","delaunay","setupScene","dpr","window","devicePixelRatio","floor","clientWidth","clientHeight","min","createCircles","circlesUpdated","setInterval","update","requestAnimationFrame","render","resized","draw","fillRect","delaunayData","getTriangleData","drawTriangles","realToCSSPixels","displayWidth","displayHeight","j","edgeCircle","circle","getGradientColor","color1","color2","ratio","w1","w2","rgb","round","heightRatio","getTriangleMidpoint","join","max"],"mappings":"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","file":"moving-triangles.f2a0e8a5.js","sourceRoot":"../src","sourcesContent":["function pointInCircle(a, b, c, p) {\n  const dx = a.x - p.x;\n  const dy = a.y - p.y;\n  const ex = b.x - p.x;\n  const ey = b.y - p.y;\n  const fx = c.x - p.x;\n  const fy = c.y - p.y;\n\n  const ap = dx * dx + dy * dy;\n  const bp = ex * ex + ey * ey;\n  const cp = fx * fx + fy * fy;\n\n  return (\n    dx * (ey * cp - bp * fy) -\n      dy * (ex * cp - bp * fx) +\n      ap * (ex * fy - ey * fx) <\n    0\n  );\n}\n\nfunction sign(p1, p2, p3) {\n  return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n}\n\nfunction pointInTriangle(pt, v1, v2, v3) {\n  const d1 = sign(pt, v1, v2);\n  const d2 = sign(pt, v2, v3);\n  const d3 = sign(pt, v3, v1);\n\n  const has_neg = d1 < 0 || d2 < 0 || d3 < 0;\n  const has_pos = d1 > 0 || d2 > 0 || d3 > 0;\n\n  return !(has_neg && has_pos);\n}\n\n/* \n  Directed Acylic Graph\n\n  Used to find what triangle a point is within\n*/\nclass Node {\n  constructor(key, vertices) {\n    this.key = key;\n    this.vertices = vertices;\n    this.children = [];\n  }\n\n  addChild(node) {\n    this.children.push(node);\n  }\n}\n\nclass TriangleGraph {\n  constructor(key, vertices) {\n    this.nodes = new Map();\n    this.nodes.set(key, new Node(key, vertices));\n  }\n\n  addNode(parentKeys, key, vertices) {\n    if (parentKeys.length == 0) return false;\n    let newNode = undefined;\n    parentKeys.forEach((parentKey) => {\n      const parentNode = this.nodes.get(parentKey);\n      if (parentNode) {\n        if (newNode == undefined) {\n          newNode = new Node(key, vertices);\n          this.nodes.set(key, newNode);\n        }\n        parentNode.addChild(newNode);\n      }\n    });\n    return true;\n  }\n\n  getValues() {\n    return this.nodes.values();\n  }\n\n  size() {\n    return this.nodes.size;\n  }\n}\n\nclass Vertex {\n  constructor(pos, incEdge, id) {\n    this.pos = pos;\n    this.incEdge = incEdge;\n    this.id = id;\n  }\n}\n\nclass HalfEdge {\n  constructor({ origin, twin, incFace, next, prev }) {\n    this.origin = origin;\n    this.twin = twin;\n    this.incFace = incFace;\n    this.next = next;\n    this.prev = prev;\n  }\n}\n\nclass Face {\n  constructor(incEdge, graphKey) {\n    this.incEdge = incEdge;\n    this.graphKey = graphKey;\n  }\n}\n\nclass Delaunay {\n  constructor(points, debugCtx) {\n    this.points = points;\n    this.debugCtx = debugCtx;\n\n    this.vertices = [];\n    this.halfEdges = [];\n    this.faces = []; // Contains index of a half-edge belonging to that face\n\n    // Create triangle base triangle that \"encapsulates\" all points\n    const FAR_AWAY = 100000;\n    const tempPositions = [\n      { x: -FAR_AWAY, y: -FAR_AWAY },\n      { x: 500, y: FAR_AWAY },\n      { x: FAR_AWAY, y: -FAR_AWAY },\n    ];\n    for (let i = 0; i < 3; i++) {\n      //this.vertices.push(new Vertex(`p${i}`, undefined));\n      this.vertices.push(\n        new Vertex(tempPositions[i], undefined, this.vertices.length)\n      );\n    }\n    for (let i = 0; i < 6; i++) {\n      this.halfEdges.push(\n        new HalfEdge({\n          origin: undefined,\n          twin: undefined,\n          incFace: undefined,\n          next: undefined,\n          prev: undefined,\n        })\n      );\n    }\n    this.faces.push(new Face(this.halfEdges[0], 0));\n    this.triangleGraph = new TriangleGraph(0, tempPositions);\n\n    // Now fill in proper values\n    this.vertices[0].incEdge = this.halfEdges[0];\n    this.vertices[1].incEdge = this.halfEdges[1];\n    this.vertices[2].incEdge = this.halfEdges[2];\n\n    this.halfEdges[0].origin = this.vertices[0];\n    this.halfEdges[0].twin = this.halfEdges[3];\n    this.halfEdges[0].incFace = this.faces[0];\n    this.halfEdges[0].next = this.halfEdges[1];\n    this.halfEdges[0].prev = this.halfEdges[2];\n\n    this.halfEdges[1].origin = this.vertices[1];\n    this.halfEdges[1].twin = this.halfEdges[4];\n    this.halfEdges[1].incFace = this.faces[0];\n    this.halfEdges[1].next = this.halfEdges[2];\n    this.halfEdges[1].prev = this.halfEdges[0];\n\n    this.halfEdges[2].origin = this.vertices[2];\n    this.halfEdges[2].twin = this.halfEdges[5];\n    this.halfEdges[2].incFace = this.faces[0];\n    this.halfEdges[2].next = this.halfEdges[0];\n    this.halfEdges[2].prev = this.halfEdges[1];\n\n    this.halfEdges[3].origin = this.vertices[1];\n    this.halfEdges[3].twin = this.halfEdges[0];\n    this.halfEdges[3].incFace = null;\n    this.halfEdges[3].next = this.halfEdges[4];\n    this.halfEdges[3].prev = this.halfEdges[5];\n\n    this.halfEdges[4].origin = this.vertices[2];\n    this.halfEdges[4].twin = this.halfEdges[1];\n    this.halfEdges[4].incFace = null;\n    this.halfEdges[4].next = this.halfEdges[5];\n    this.halfEdges[4].prev = this.halfEdges[3];\n\n    this.halfEdges[5].origin = this.vertices[0];\n    this.halfEdges[5].twin = this.halfEdges[2];\n    this.halfEdges[5].incFace = null;\n    this.halfEdges[5].next = this.halfEdges[3];\n    this.halfEdges[5].prev = this.halfEdges[4];\n\n    this.triangulate();\n  }\n\n  triangulate() {\n    for (let i = 0; i < this.points.length; i++) {\n      const point = this.points[i];\n      const triangle = this.containingTriangle(point);\n      if (triangle === undefined) break;\n\n      /* Need case for when point lies on edge of triangle? */\n\n      const [newVertex, affectedEdges] = this.splitTriangle(point, triangle);\n\n      affectedEdges.forEach((edge) => {\n        this.legalizeEdge(newVertex, edge);\n      });\n    }\n  }\n\n  splitTriangle(point, triangle) {\n    // First create new vertex from point\n    const newVertex = new Vertex(point, undefined, this.vertices.length);\n\n    // Next create half-edges\n    let newHalfEdges = [];\n    for (let i = 0; i < 6; i++) {\n      let leftEdge = i % 2 == 0 ? true : false;\n      newHalfEdges.push(\n        new HalfEdge({\n          origin: leftEdge ? newVertex : undefined,\n          twin: undefined,\n          incFace: undefined,\n          next: undefined,\n          prev: undefined,\n        })\n      );\n    }\n    // Assign half-edge twins\n    for (let i = 0; i < 3; i++) {\n      const e1 = newHalfEdges[i * 2];\n      const e2 = i == 0 ? newHalfEdges[5] : newHalfEdges[i * 2 - 1];\n      e1.twin = e2;\n      e2.twin = e1;\n    }\n\n    // Now create each new face and re-assign relevant next/prev edges\n    const outerFaceEdges = this.getFaceHalfEdges(triangle);\n    let newFaces = [];\n    for (let i = 0; i < 3; i++) {\n      let e1 = outerFaceEdges[i];\n      let e2 = newHalfEdges[i * 2 + 1];\n      let e3 = newHalfEdges[i * 2];\n      const newFace = new Face(e3, this.faces.length + i);\n\n      e2.origin = e1.next.origin;\n\n      e1.next = e2;\n      e1.prev = e3;\n      e1.incFace = newFace;\n      e2.next = e3;\n      e2.prev = e1;\n      e2.incFace = newFace;\n      e3.next = e1;\n      e3.prev = e2;\n      e3.incFace = newFace;\n\n      newFaces.push(newFace);\n      const vertices = [e1.origin.id, e2.origin.id, e3.origin.id];\n      if (\n        !this.triangleGraph.addNode(\n          [triangle.graphKey],\n          newFace.graphKey,\n          vertices\n        )\n      ) {\n        console.error(\"Error adding face to triangle graph:\", newFace);\n      }\n    }\n\n    // Point vertex to first new half-edge\n    newVertex.incEdge = newHalfEdges[0];\n\n    // Add new items\n    this.vertices.push(newVertex);\n    this.halfEdges = this.halfEdges.concat(newHalfEdges);\n    this.faces = this.faces.concat(newFaces);\n\n    return [newVertex, outerFaceEdges];\n  }\n\n  legalizeEdge(newVertex, edge) {\n    const face = edge.incFace;\n    const adjacentFace = edge.twin.incFace;\n    if (adjacentFace == null) {\n      return;\n    } else {\n      // Check if edge needs to be flipped\n      const testPoint = edge.twin.prev.origin.pos;\n      if (\n        pointInCircle(\n          newVertex.pos,\n          edge.origin.pos,\n          edge.twin.origin.pos,\n          testPoint\n        )\n      ) {\n        const incFaceEdge1 = edge.twin.prev;\n        const incFaceEdge2 = edge.twin.next;\n        const faceEdge1 = edge.next;\n        const faceEdge2 = edge.prev;\n\n        // Flip edge\n        edge.next = incFaceEdge1;\n        edge.prev = faceEdge1;\n        edge.twin.next = faceEdge2;\n        edge.twin.prev = incFaceEdge2;\n        edge.origin = faceEdge2.origin;\n        edge.twin.origin = incFaceEdge1.origin;\n\n        // Correct Edges\n        incFaceEdge1.prev = edge;\n        incFaceEdge1.next = faceEdge1;\n        faceEdge1.prev = incFaceEdge1;\n        faceEdge1.next = edge;\n\n        faceEdge2.prev = edge.twin;\n        faceEdge2.next = incFaceEdge2;\n        incFaceEdge2.prev = faceEdge2;\n        incFaceEdge2.next = edge.twin;\n\n        // Create two new faces\n        const newFaces = [\n          new Face(faceEdge2, this.faces.length),\n          new Face(faceEdge1, this.faces.length + 1),\n        ];\n        edge.twin.incFace = newFaces[0];\n        faceEdge2.incFace = newFaces[0];\n        incFaceEdge2.incFace = newFaces[0];\n        edge.incFace = newFaces[1];\n        incFaceEdge1.incFace = newFaces[1];\n        faceEdge1.incFace = newFaces[1];\n\n        for (const newFace of newFaces) {\n          const [v1, v2, v3] = this.getFaceVertices(newFace);\n          if (\n            !this.triangleGraph.addNode(\n              [face.graphKey, adjacentFace.graphKey],\n              newFace.graphKey,\n              [v1.id, v2.id, v3.id]\n            )\n          ) {\n            console.error(\"Error adding face to triangle graph:\", newFace);\n          }\n          this.faces.push(newFace);\n        }\n\n        // Since edge flip could have affected triangles next to original adjacent triangle, check them\n        this.legalizeEdge(newVertex, incFaceEdge1);\n        this.legalizeEdge(newVertex, incFaceEdge2);\n      }\n    }\n  }\n\n  containingTriangle(point) {\n    let currentNode = this.triangleGraph.nodes.get(0);\n    let safety = 0;\n    while (currentNode.children.length > 0) {\n      let foundChild = false;\n      for (const child of currentNode.children) {\n        //const vertices = child.vertices;\n        const vertices = [\n          this.vertices[child.vertices[0]].pos,\n          this.vertices[child.vertices[1]].pos,\n          this.vertices[child.vertices[2]].pos,\n        ];\n        if (pointInTriangle(point, vertices[0], vertices[1], vertices[2])) {\n          currentNode = child;\n          foundChild = true;\n          break;\n        }\n      }\n      if (!foundChild) {\n        console.error(\"Uh oh. Triangle had children but none matched.\", point);\n        return undefined;\n      }\n\n      safety++;\n      if (safety > 10000) {\n        console.error(\"Infinite loop here\");\n        break;\n      }\n    }\n    return this.faces[currentNode.key];\n  }\n\n  getFaceHalfEdges(face) {\n    let edges = [face.incEdge];\n    let edge = edges[0];\n\n    let safety = 0;\n    while (edge.next.origin != edges[0].origin) {\n      edges.push(edge.next);\n      edge = edge.next;\n\n      safety++;\n      if (safety > 10000) {\n        console.error(\"Infinite loop here\");\n        break;\n      }\n    }\n    return edges;\n  }\n\n  getFaceVertices(face) {\n    let edge = face.incEdge;\n    let vertices = [edge.origin];\n\n    let safety = 0;\n    while (edge.next.origin != vertices[0]) {\n      edge = edge.next;\n      vertices.push(edge.origin);\n\n      safety++;\n      if (safety > 10000) {\n        throw new Error(\"Infinite loop here\");\n      }\n    }\n    return vertices;\n  }\n\n  printFace(face) {\n    const edges = this.getFaceHalfEdges(face);\n    console.log(\"FACE INDEX:\", face);\n    for (let i = 0; i < edges.length; i++) {\n      console.log(edges[i].origin.pos, \"TO\", edges[i].twin.origin.pos);\n      console.log(edges[i]);\n    }\n  }\n\n  getTriangleData() {\n    let vertices = [];\n    for (let i = 3; i < this.vertices.length; i++) {\n      vertices.push(this.vertices[i].pos);\n    }\n    let triangles = [];\n    const triangleIterator = this.triangleGraph.getValues();\n    for (let i = 0; i < this.triangleGraph.size(); i++) {\n      const triangle = triangleIterator.next().value;\n      if (triangle.children.length != 0) continue;\n      const [v1, v2, v3] = triangle.vertices;\n      if (v1 < 3 || v2 < 3 || v3 < 3) continue;\n      triangles.push([v1 - 3, v2 - 3, v3 - 3]);\n    }\n    return { vertices: vertices, triangles: triangles };\n  }\n\n  debugDraw(ctx) {\n    // // Clear canvas\n    // ctx.fillStyle = \"#f0f0f0\";\n    // ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    for (const face of this.faces) {\n      const edges = this.getFaceHalfEdges(face);\n      for (const edge of edges) {\n        ctx.beginPath();\n        let v1 = [edge.origin.pos.x, edge.origin.pos.y];\n        let v2 = [edge.twin.origin.pos.x, edge.twin.origin.pos.y];\n        let p1 = [ctx.canvas.width * -5, ctx.canvas.height * -5];\n        let p2 = [ctx.canvas.width * 5, ctx.canvas.height * -5];\n        let p3 = [ctx.canvas.width / 2, ctx.canvas.height * 5];\n        if (typeof edge.origin.pos === \"string\") {\n          if (edge.origin.pos === \"p0\") {\n            v1 = p1;\n          } else if (edge.origin.pos === \"p1\") {\n            v1 = p2;\n          } else {\n            v1 = p3;\n          }\n        }\n        if (typeof edge.twin.origin.pos === \"string\") {\n          if (edge.twin.origin.pos === \"p0\") {\n            v2 = p1;\n          } else if (edge.twin.origin.pos === \"p1\") {\n            v2 = p2;\n          } else {\n            v2 = p3;\n          }\n        }\n\n        ctx.moveTo(v1[0], v1[1]);\n        ctx.lineTo(v2[0], v2[1]);\n        ctx.strokeStyle = \"green\";\n        ctx.lineWidth = 2;\n        ctx.stroke();\n      }\n    }\n  }\n}\n\nexport default Delaunay;\n","import Delaunay from \"./delaunay\";\n\nclass Circle {\n  constructor({\n    id,\n    color,\n    radius,\n    position,\n    staticObject,\n    visible,\n    rotationSpeed,\n    curveRate,\n  }) {\n    this.id = id;\n    this.color = color;\n    this.radius = radius;\n    this.position = position;\n    this.staticObject = staticObject;\n    this.visible = visible;\n\n    this.angle = Math.random() * Math.PI * 2;\n    this.dAngle = (Math.random() > 0.5 ? 1 : -1) * curveRate;\n    this.rotationDirection = {\n      x: (Math.random() > 0.5 ? 1 : -1) * rotationSpeed,\n      y: (Math.random() > 0.5 ? 1 : -1) * rotationSpeed,\n    };\n  }\n\n  update(canvas) {\n    if (this.staticObject) return;\n\n    this.position.x +=\n      this.rotationDirection.x * Math.cos(this.angle + this.dAngle);\n    this.position.y +=\n      this.rotationDirection.y * Math.sin(this.angle + this.dAngle);\n\n    this.angle += this.dAngle;\n    if (this.angle >= Math.PI * 2) {\n      this.angle = 0;\n    }\n    if (Math.random() > 0.99) {\n      this.dAngle *= -1;\n    }\n    if (\n      this.position.x - this.radius < 0 ||\n      this.position.x + this.radius > canvas.width\n    ) {\n      this.rotationDirection.x *= -1;\n    }\n    if (\n      this.position.y - this.radius < 0 ||\n      this.position.y + this.radius > canvas.height\n    ) {\n      this.rotationDirection.y *= -1;\n    }\n  }\n\n  draw(ctx) {\n    if (!this.visible) return;\n    ctx.beginPath();\n    ctx.arc(this.position.x, this.position.y, this.radius, 0, 2 * Math.PI);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n  }\n}\n\nconst main = (function () {\n  const canvas = document.getElementById(\"background-canvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  resizeCanvas(canvas);\n\n  // Constants\n  const fps = 60;\n  const circleColor = \"#edededbb\";\n  const drawEdges = false;\n  const lineColor = \"#B5B0FB66\";\n  const lineWidth = 1;\n  // const triangleColorGradient = [\n  //   [87, 75, 250],\n  //   [87, 250, 160],\n  // ];\n  const triangleColorGradient = [\n    [0, 219, 222],\n    [252, 0, 255],\n  ];\n\n  // Non-constants\n  let numCircles,\n    circleCurveRateRange,\n    circleSpeedRange,\n    circleRadiusRange,\n    circles,\n    idCounter,\n    points,\n    delaunay;\n\n  // Setup scene\n  function setupScene() {\n    // Spacing should not be larger on higher-res displays, so use client width and height to calculate number of circles. Other factors, however, should be scaled based on devicePixelRatio\n    const dpr = window.devicePixelRatio;\n    numCircles = {\n      x: Math.floor(canvas.clientWidth / 150),\n      y: Math.floor(canvas.clientHeight / 150),\n    };\n    circleCurveRateRange = [0.005, 0.02];\n    circleSpeedRange = [0.5 * dpr, 1 * dpr];\n    circleRadiusRange = [\n      Math.min(0.0025 * canvas.height, 7 * dpr),\n      Math.min(0.0065 * canvas.height, 9 * dpr),\n    ];\n\n    circles = [];\n    idCounter = 0;\n\n    points = [];\n    delaunay = undefined;\n\n    createCircles();\n  }\n\n  setupScene();\n  // Initialize update loop. Locked to specific FPS\n  let circlesUpdated = false;\n  setInterval(update, 1000 / fps);\n\n  requestAnimationFrame(render);\n\n  function update() {\n    const resized = resizeCanvas(canvas);\n    if (resized) {\n      setupScene();\n    }\n    points = [];\n    for (let i = 0; i < circles.length; i++) {\n      circles[i].update(canvas);\n      points.push(circles[i].position);\n    }\n    delaunay = new Delaunay(points, ctx);\n    circlesUpdated = true;\n  }\n\n  function draw() {\n    if (!circlesUpdated) return;\n    if (delaunay === undefined) return;\n    circlesUpdated = false;\n    // Clear canvas\n    ctx.fillStyle = \"#f0f0f0\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    const delaunayData = delaunay.getTriangleData();\n    drawTriangles(\n      ctx,\n      delaunayData.vertices,\n      delaunayData.triangles,\n      drawEdges\n    );\n\n    for (let i = 0; i < circles.length; i++) {\n      circles[i].draw(ctx);\n    }\n  }\n\n  function render() {\n    draw();\n\n    requestAnimationFrame(render);\n  }\n\n  function resizeCanvas(canvas) {\n    var realToCSSPixels = window.devicePixelRatio;\n    // Lookup the size the browser is displaying the canvas in CSS pixels\n    // and compute a size needed to make our drawingbuffer match it in\n    // device pixels.\n    var displayWidth = Math.floor(canvas.clientWidth * realToCSSPixels);\n    var displayHeight = Math.floor(canvas.clientHeight * realToCSSPixels);\n    // Check if the canvas is not the same size.\n    if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\n      // Make the canvas the same size\n      canvas.width = displayWidth;\n      canvas.height = displayHeight;\n      return true;\n    }\n    return false;\n  }\n\n  function createCircles() {\n    circles = [];\n    const dx = canvas.width / (numCircles.x + 1);\n    const dy = canvas.height / (numCircles.y + 1);\n\n    // Create grid of circles\n    for (let i = 0; i <= numCircles.y + 1; i++) {\n      for (let j = 0; j <= numCircles.x + 1; j++) {\n        const pos = { x: j * dx, y: i * dy };\n        const rotationSpeed =\n          Math.random() * (circleSpeedRange[1] - circleSpeedRange[0]) +\n          circleSpeedRange[0];\n        const curveRate =\n          Math.random() * (circleCurveRateRange[1] - circleCurveRateRange[0]) +\n          circleCurveRateRange[0];\n        const edgeCircle =\n          i === 0 || j === 0 || j === numCircles.x + 1 || i === numCircles.y + 1\n            ? true\n            : false;\n        const circle = new Circle({\n          id: idCounter,\n          color: circleColor,\n          radius:\n            Math.random() * (circleRadiusRange[1] - circleRadiusRange[0]) +\n            circleRadiusRange[0],\n          position: pos,\n          rotationSpeed: rotationSpeed,\n          staticObject: edgeCircle ? true : false,\n          visible: edgeCircle ? false : true,\n          curveRate: curveRate,\n        });\n\n        idCounter++;\n        circles.push(circle);\n      }\n    }\n  }\n\n  function getGradientColor(color1, color2, ratio) {\n    var w1 = ratio;\n    var w2 = 1 - w1;\n    var rgb = [\n      Math.round(color1[0] * w1 + color2[0] * w2),\n      Math.round(color1[1] * w1 + color2[1] * w2),\n      Math.round(color1[2] * w1 + color2[2] * w2),\n    ];\n    return rgb;\n  }\n\n  function drawTriangles(ctx, vertices, triangles, drawEdges) {\n    for (let i = 0; i < triangles.length; i++) {\n      const triangle = triangles[i];\n      const [v1, v2, v3] = [\n        vertices[triangle[0]],\n        vertices[triangle[1]],\n        vertices[triangle[2]],\n      ];\n      ctx.beginPath();\n      ctx.moveTo(v1.x, v1.y);\n      ctx.lineTo(v2.x, v2.y);\n      ctx.lineTo(v3.x, v3.y);\n      const heightRatio = getTriangleMidpoint([v1, v2, v3]).y / canvas.height;\n      const color = getGradientColor(\n        triangleColorGradient[0],\n        triangleColorGradient[1],\n        heightRatio\n      );\n      ctx.fillStyle = `rgb(${color.join()})`;\n      ctx.fill();\n\n      ctx.strokeStyle = drawEdges ? circleColor : ctx.fillStyle;\n      ctx.lineTo(v1.x, v1.y);\n\n      ctx.lineWidth = lineWidth;\n      ctx.stroke();\n    }\n  }\n  function getTriangleMidpoint(vertices) {\n    let min = { x: undefined, y: undefined };\n    let max = { x: undefined, y: undefined };\n\n    for (let i = 0; i < vertices.length; i++) {\n      if (vertices[i].x < min.x || min.x === undefined) {\n        min.x = vertices[i].x;\n      }\n      if (vertices[i].x > max.x || max.x === undefined) {\n        max.x = vertices[i].x;\n      }\n      if (vertices[i].y < min.y || min.y === undefined) {\n        min.y = vertices[i].y;\n      }\n      if (vertices[i].y > max.y || max.y === undefined) {\n        max.y = vertices[i].y;\n      }\n    }\n    return { x: (max.x - min.x) / 2 + min.x, y: (max.y - min.y) / 2 + min.y };\n  }\n})();\n"]}