{"version":3,"sources":["background/delaunay.js","background/moving-triangles.js"],"names":["pointInCircle","a","b","c","p","dx","x","dy","y","ex","ey","fx","fy","ap","bp","cp","sign","p1","p2","p3","pointInTriangle","pt","v1","v2","v3","d1","d2","d3","has_neg","has_pos","Node","key","vertices","children","node","push","TriangleGraph","nodes","Map","set","parentKeys","length","newNode","undefined","forEach","parentKey","parentNode","get","addChild","values","size","Vertex","pos","incEdge","id","HalfEdge","origin","twin","incFace","next","prev","Face","graphKey","Delaunay","points","debugCtx","halfEdges","faces","FAR_AWAY","tempPositions","i","triangleGraph","triangulate","point","triangle","containingTriangle","splitTriangle","newVertex","affectedEdges","edge","legalizeEdge","newHalfEdges","leftEdge","e1","e2","outerFaceEdges","getFaceHalfEdges","newFaces","e3","newFace","addNode","console","error","concat","face","adjacentFace","testPoint","incFaceEdge1","incFaceEdge2","faceEdge1","faceEdge2","getFaceVertices","currentNode","safety","foundChild","child","edges","Error","log","triangles","triangleIterator","getValues","value","ctx","beginPath","canvas","width","height","moveTo","lineTo","strokeStyle","lineWidth","stroke","Circle","color","radius","position","velocity","staticObject","visible","arc","Math","PI","fillStyle","fill","main","document","getElementById","getContext","resizeCanvas","fps","circleColor","drawEdges","lineColor","triangleBaseColor","h","s","l","triangleColorRangeL","numCircles","circleSpeedRange","circleRadius","circles","idCounter","delaunay","delaunayData","setupScene","floor","min","createCircles","circlesUpdated","setInterval","update","requestAnimationFrame","render","resized","draw","fillRect","getTriangleData","drawTriangles","realToCSSPixels","window","devicePixelRatio","displayWidth","clientWidth","displayHeight","clientHeight","offset","j","direction","velocityX","random","velocityY","edgeCircle","circle","heightRatio","getTriangleMidpoint","lightness","max"],"mappings":"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","file":"moving-triangles.f2a0e8a5.js","sourceRoot":"../src","sourcesContent":["function pointInCircle(a, b, c, p) {\n  const dx = a.x - p.x;\n  const dy = a.y - p.y;\n  const ex = b.x - p.x;\n  const ey = b.y - p.y;\n  const fx = c.x - p.x;\n  const fy = c.y - p.y;\n\n  const ap = dx * dx + dy * dy;\n  const bp = ex * ex + ey * ey;\n  const cp = fx * fx + fy * fy;\n\n  return (\n    dx * (ey * cp - bp * fy) -\n      dy * (ex * cp - bp * fx) +\n      ap * (ex * fy - ey * fx) <\n    0\n  );\n}\n\nfunction sign(p1, p2, p3) {\n  return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n}\n\nfunction pointInTriangle(pt, v1, v2, v3) {\n  const d1 = sign(pt, v1, v2);\n  const d2 = sign(pt, v2, v3);\n  const d3 = sign(pt, v3, v1);\n\n  const has_neg = d1 < 0 || d2 < 0 || d3 < 0;\n  const has_pos = d1 > 0 || d2 > 0 || d3 > 0;\n\n  return !(has_neg && has_pos);\n}\n/* \n  Directed Acylic Graph\n\n  Used to find what triangle a point is within\n*/\nclass Node {\n  constructor(key, vertices) {\n    this.key = key;\n    this.vertices = vertices;\n    this.children = [];\n  }\n\n  addChild(node) {\n    this.children.push(node);\n  }\n}\n\nclass TriangleGraph {\n  constructor(key, vertices) {\n    this.nodes = new Map();\n    this.nodes.set(key, new Node(key, vertices));\n  }\n\n  addNode(parentKeys, key, vertices) {\n    if (parentKeys.length == 0) return false;\n    let newNode = undefined;\n    parentKeys.forEach((parentKey) => {\n      const parentNode = this.nodes.get(parentKey);\n      if (parentNode) {\n        if (newNode == undefined) {\n          newNode = new Node(key, vertices);\n          this.nodes.set(key, newNode);\n        }\n        parentNode.addChild(newNode);\n      }\n    });\n    return true;\n  }\n\n  getValues() {\n    return this.nodes.values();\n  }\n\n  size() {\n    return this.nodes.size;\n  }\n}\n\nclass Vertex {\n  constructor(pos, incEdge, id) {\n    this.pos = pos;\n    this.incEdge = incEdge;\n    this.id = id;\n  }\n}\n\nclass HalfEdge {\n  constructor({ origin, twin, incFace, next, prev }) {\n    this.origin = origin;\n    this.twin = twin;\n    this.incFace = incFace;\n    this.next = next;\n    this.prev = prev;\n  }\n}\n\nclass Face {\n  constructor(incEdge, graphKey) {\n    this.incEdge = incEdge;\n    this.graphKey = graphKey;\n  }\n}\n\nclass Delaunay {\n  constructor(points, debugCtx) {\n    this.points = points;\n    this.debugCtx = debugCtx;\n\n    this.vertices = [];\n    this.halfEdges = [];\n    this.faces = []; // Contains index of a half-edge belonging to that face\n\n    // Create triangle base triangle that \"encapsulates\" all points\n\n    // First initialize empty structure\n    // const tempPositions = [\n    //   { x: Number.NEGATIVE_INFINITY, y: Number.POSITIVE_INFINITY },\n    //   { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY },\n    //   { x: Number.NEGATIVE_INFINITY, y: Number.NEGATIVE_INFINITY },\n    // ];\n    const FAR_AWAY = 10000;\n    const tempPositions = [\n      { x: -FAR_AWAY, y: -FAR_AWAY },\n      { x: 500, y: FAR_AWAY },\n      { x: FAR_AWAY, y: -FAR_AWAY },\n    ];\n    for (let i = 0; i < 3; i++) {\n      //this.vertices.push(new Vertex(`p${i}`, undefined));\n      this.vertices.push(\n        new Vertex(tempPositions[i], undefined, this.vertices.length)\n      );\n    }\n    for (let i = 0; i < 6; i++) {\n      this.halfEdges.push(\n        new HalfEdge({\n          origin: undefined,\n          twin: undefined,\n          incFace: undefined,\n          next: undefined,\n          prev: undefined,\n        })\n      );\n    }\n    this.faces.push(new Face(this.halfEdges[0], 0));\n    this.triangleGraph = new TriangleGraph(0, tempPositions);\n\n    // Now fill in proper values\n    this.vertices[0].incEdge = this.halfEdges[0];\n    this.vertices[1].incEdge = this.halfEdges[1];\n    this.vertices[2].incEdge = this.halfEdges[2];\n\n    this.halfEdges[0].origin = this.vertices[0];\n    this.halfEdges[0].twin = this.halfEdges[3];\n    this.halfEdges[0].incFace = this.faces[0];\n    this.halfEdges[0].next = this.halfEdges[1];\n    this.halfEdges[0].prev = this.halfEdges[2];\n\n    this.halfEdges[1].origin = this.vertices[1];\n    this.halfEdges[1].twin = this.halfEdges[4];\n    this.halfEdges[1].incFace = this.faces[0];\n    this.halfEdges[1].next = this.halfEdges[2];\n    this.halfEdges[1].prev = this.halfEdges[0];\n\n    this.halfEdges[2].origin = this.vertices[2];\n    this.halfEdges[2].twin = this.halfEdges[5];\n    this.halfEdges[2].incFace = this.faces[0];\n    this.halfEdges[2].next = this.halfEdges[0];\n    this.halfEdges[2].prev = this.halfEdges[1];\n\n    this.halfEdges[3].origin = this.vertices[1];\n    this.halfEdges[3].twin = this.halfEdges[0];\n    this.halfEdges[3].incFace = null;\n    this.halfEdges[3].next = this.halfEdges[4];\n    this.halfEdges[3].prev = this.halfEdges[5];\n\n    this.halfEdges[4].origin = this.vertices[2];\n    this.halfEdges[4].twin = this.halfEdges[1];\n    this.halfEdges[4].incFace = null;\n    this.halfEdges[4].next = this.halfEdges[5];\n    this.halfEdges[4].prev = this.halfEdges[3];\n\n    this.halfEdges[5].origin = this.vertices[0];\n    this.halfEdges[5].twin = this.halfEdges[2];\n    this.halfEdges[5].incFace = null;\n    this.halfEdges[5].next = this.halfEdges[3];\n    this.halfEdges[5].prev = this.halfEdges[4];\n\n    this.triangulate();\n  }\n\n  triangulate() {\n    for (let i = 0; i < this.points.length; i++) {\n      const point = this.points[i];\n      const triangle = this.containingTriangle(point);\n\n      /* Need case for when point lies on edge of triangle? */\n\n      const [newVertex, affectedEdges] = this.splitTriangle(point, triangle);\n\n      affectedEdges.forEach((edge) => {\n        this.legalizeEdge(newVertex, edge);\n      });\n\n      //this.debugDraw(this.debugCtx);\n    }\n    //this.getTriangleData();\n  }\n\n  splitTriangle(point, triangle) {\n    // First create new vertex from point\n    const newVertex = new Vertex(point, undefined, this.vertices.length);\n\n    // Next create half-edges\n    let newHalfEdges = [];\n    for (let i = 0; i < 6; i++) {\n      let leftEdge = i % 2 == 0 ? true : false;\n      newHalfEdges.push(\n        new HalfEdge({\n          origin: leftEdge ? newVertex : undefined,\n          twin: undefined, //this.halfEdges.length + ((i - 1) % 6),\n          incFace: undefined,\n          next: undefined,\n          prev: undefined,\n        })\n      );\n    }\n    // Assign half-edge twins\n    for (let i = 0; i < 3; i++) {\n      const e1 = newHalfEdges[i * 2];\n      const e2 = i == 0 ? newHalfEdges[5] : newHalfEdges[i * 2 - 1];\n      e1.twin = e2;\n      e2.twin = e1;\n    }\n\n    // Now create each new face and re-assign relevant next/prev edges\n    const outerFaceEdges = this.getFaceHalfEdges(triangle);\n    let newFaces = [];\n    for (let i = 0; i < 3; i++) {\n      let e1 = outerFaceEdges[i];\n      let e2 = newHalfEdges[i * 2 + 1];\n      let e3 = newHalfEdges[i * 2];\n      const newFace = new Face(e3, this.faces.length + i);\n\n      e2.origin = e1.next.origin;\n\n      e1.next = e2;\n      e1.prev = e3;\n      e1.incFace = newFace;\n      e2.next = e3;\n      e2.prev = e1;\n      e2.incFace = newFace;\n      e3.next = e1;\n      e3.prev = e2;\n      e3.incFace = newFace;\n\n      newFaces.push(newFace);\n      //const vertices = [e1.origin.pos, e2.origin.pos, e3.origin.pos];\n      const vertices = [e1.origin.id, e2.origin.id, e3.origin.id];\n      if (\n        !this.triangleGraph.addNode(\n          [triangle.graphKey],\n          newFace.graphKey,\n          vertices\n        )\n      ) {\n        console.error(\"Error adding face to triangle graph:\", newFace);\n      }\n    }\n\n    // Point vertex to first new half-edge\n    newVertex.incEdge = newHalfEdges[0];\n\n    // Add new items\n    this.vertices.push(newVertex);\n    this.halfEdges = this.halfEdges.concat(newHalfEdges);\n    this.faces = this.faces.concat(newFaces);\n\n    return [newVertex, outerFaceEdges];\n\n    // Debug print new faces\n    // for (let i = 0; i < 3; i++) {\n    //   this.printFace(newFaces[i]);\n    // }\n  }\n\n  legalizeEdge(newVertex, edge) {\n    const face = edge.incFace;\n    const adjacentFace = edge.twin.incFace;\n    if (adjacentFace == null) {\n      return;\n    } else {\n      // Check if edge needs to be flipped\n      const testPoint = edge.twin.prev.origin.pos;\n      if (\n        pointInCircle(\n          newVertex.pos,\n          edge.origin.pos,\n          edge.twin.origin.pos,\n          testPoint\n        )\n      ) {\n        const incFaceEdge1 = edge.twin.prev;\n        const incFaceEdge2 = edge.twin.next;\n        const faceEdge1 = edge.next;\n        const faceEdge2 = edge.prev;\n\n        // Flip edge\n        edge.next = incFaceEdge1;\n        edge.prev = faceEdge1;\n        edge.twin.next = faceEdge2;\n        edge.twin.prev = incFaceEdge2;\n        edge.origin = faceEdge2.origin;\n        edge.twin.origin = incFaceEdge1.origin;\n\n        // Correct Edges\n        incFaceEdge1.prev = edge;\n        incFaceEdge1.next = faceEdge1;\n        faceEdge1.prev = incFaceEdge1;\n        faceEdge1.next = edge;\n\n        faceEdge2.prev = edge.twin;\n        faceEdge2.next = incFaceEdge2;\n        incFaceEdge2.prev = faceEdge2;\n        incFaceEdge2.next = edge.twin;\n\n        // Create two new faces\n        const newFaces = [\n          new Face(faceEdge2, this.faces.length),\n          new Face(faceEdge1, this.faces.length + 1),\n        ];\n        edge.twin.incFace = newFaces[0];\n        faceEdge2.incFace = newFaces[0];\n        incFaceEdge2.incFace = newFaces[0];\n        edge.incFace = newFaces[1];\n        incFaceEdge1.incFace = newFaces[1];\n        faceEdge1.incFace = newFaces[1];\n\n        for (const newFace of newFaces) {\n          const [v1, v2, v3] = this.getFaceVertices(newFace);\n          if (\n            !this.triangleGraph.addNode(\n              [face.graphKey, adjacentFace.graphKey],\n              newFace.graphKey,\n              [v1.id, v2.id, v3.id]\n              //[v1.pos, v2.pos, v3.pos]\n            )\n          ) {\n            console.error(\"Error adding face to triangle graph:\", newFace);\n          }\n          this.faces.push(newFace);\n        }\n\n        // Since edge flip could have affected triangles next to original adjacent triangle, check them\n        this.legalizeEdge(newVertex, incFaceEdge1);\n        this.legalizeEdge(newVertex, incFaceEdge2);\n      }\n    }\n  }\n\n  containingTriangle(point) {\n    let currentNode = this.triangleGraph.nodes.get(0);\n    let safety = 0;\n    while (currentNode.children.length > 0) {\n      let foundChild = false;\n      for (const child of currentNode.children) {\n        //const vertices = child.vertices;\n        const vertices = [\n          this.vertices[child.vertices[0]].pos,\n          this.vertices[child.vertices[1]].pos,\n          this.vertices[child.vertices[2]].pos,\n        ];\n        if (pointInTriangle(point, vertices[0], vertices[1], vertices[2])) {\n          currentNode = child;\n          foundChild = true;\n          break;\n        }\n      }\n      if (!foundChild) {\n        console.error(\"Uh oh. Triangle had children but none matched.\", point);\n      }\n\n      safety++;\n      if (safety > 10000) {\n        console.error(\"Infinite loop here\");\n        break;\n      }\n    }\n    return this.faces[currentNode.key];\n  }\n\n  getFaceHalfEdges(face) {\n    let edges = [face.incEdge];\n    let edge = edges[0];\n\n    let safety = 0;\n    while (edge.next.origin != edges[0].origin) {\n      edges.push(edge.next);\n      edge = edge.next;\n\n      safety++;\n      if (safety > 10000) {\n        console.error(\"Infinite loop here\");\n        break;\n      }\n    }\n    return edges;\n  }\n\n  getFaceVertices(face) {\n    let edge = face.incEdge;\n    let vertices = [edge.origin];\n\n    let safety = 0;\n    while (edge.next.origin != vertices[0]) {\n      edge = edge.next;\n      vertices.push(edge.origin);\n\n      safety++;\n      if (safety > 10000) {\n        throw new Error(\"Infinite loop here\");\n        break;\n      }\n    }\n    return vertices;\n  }\n\n  printFace(face) {\n    const edges = this.getFaceHalfEdges(face);\n    console.log(\"FACE INDEX:\", face);\n    for (let i = 0; i < edges.length; i++) {\n      console.log(edges[i].origin.pos, \"TO\", edges[i].twin.origin.pos);\n      console.log(edges[i]);\n    }\n  }\n\n  getTriangleData() {\n    //let vertices = this.vertices.slice(3, this.vertices.length);\n    let vertices = [];\n    for (let i = 3; i < this.vertices.length; i++) {\n      vertices.push(this.vertices[i].pos);\n    }\n    let triangles = [];\n    const triangleIterator = this.triangleGraph.getValues();\n    for (let i = 0; i < this.triangleGraph.size(); i++) {\n      const triangle = triangleIterator.next().value;\n      if (triangle.children.length != 0) continue;\n      const [v1, v2, v3] = triangle.vertices;\n      if (v1 < 3 || v2 < 3 || v3 < 3) continue;\n      triangles.push([v1 - 3, v2 - 3, v3 - 3]);\n    }\n    return { vertices: vertices, triangles: triangles };\n  }\n\n  debugDraw(ctx) {\n    // // Clear canvas\n    // ctx.fillStyle = \"#f0f0f0\";\n    // ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    for (const face of this.faces) {\n      const edges = this.getFaceHalfEdges(face);\n      for (const edge of edges) {\n        ctx.beginPath();\n        let v1 = [edge.origin.pos.x, edge.origin.pos.y];\n        let v2 = [edge.twin.origin.pos.x, edge.twin.origin.pos.y];\n        let p1 = [ctx.canvas.width * -5, ctx.canvas.height * -5];\n        let p2 = [ctx.canvas.width * 5, ctx.canvas.height * -5];\n        let p3 = [ctx.canvas.width / 2, ctx.canvas.height * 5];\n        if (typeof edge.origin.pos === \"string\") {\n          if (edge.origin.pos === \"p0\") {\n            v1 = p1;\n          } else if (edge.origin.pos === \"p1\") {\n            v1 = p2;\n          } else {\n            v1 = p3;\n          }\n        }\n        if (typeof edge.twin.origin.pos === \"string\") {\n          if (edge.twin.origin.pos === \"p0\") {\n            v2 = p1;\n          } else if (edge.twin.origin.pos === \"p1\") {\n            v2 = p2;\n          } else {\n            v2 = p3;\n          }\n        }\n        // console.log(v1, \"TO\", v2);\n        // console.log(edge, edge.twin);\n        ctx.moveTo(v1[0], v1[1]);\n        ctx.lineTo(v2[0], v2[1]);\n        ctx.strokeStyle = \"green\";\n        ctx.lineWidth = 2;\n        ctx.stroke();\n      }\n    }\n  }\n}\n\nexport default Delaunay;\n","import Delaunay from \"./delaunay\";\n\nclass Circle {\n  constructor({\n    id,\n    color,\n    radius,\n    position,\n    velocity,\n    staticObject,\n    visible,\n  }) {\n    this.id = id;\n    this.color = color;\n    this.radius = radius;\n    this.position = position;\n    this.velocity = velocity;\n    this.staticObject = staticObject;\n    this.visible = visible;\n  }\n\n  update(canvas) {\n    if (this.staticObject) return;\n\n    this.position.x += this.velocity.x;\n    this.position.y += this.velocity.y;\n\n    if (\n      this.position.x - this.radius < 0 ||\n      this.position.x + this.radius > canvas.width\n    ) {\n      this.velocity.x *= -1;\n    }\n    if (\n      this.position.y - this.radius < 0 ||\n      this.position.y + this.radius > canvas.height\n    ) {\n      this.velocity.y *= -1;\n    }\n  }\n\n  draw(ctx) {\n    if (!this.visible) return;\n    ctx.beginPath();\n    ctx.arc(this.position.x, this.position.y, this.radius, 0, 2 * Math.PI);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n  }\n}\n\nconst main = (function () {\n  const canvas = document.getElementById(\"background-canvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  resizeCanvas(canvas);\n\n  // Constants\n  const fps = 60;\n  const circleColor = \"#B5B0FB88\";\n  const drawEdges = false;\n  const lineColor = \"#B5B0FB88\";\n  const lineWidth = 1;\n  const triangleBaseColor = { h: 244, s: 94, l: 68 };\n  const triangleColorRangeL = [-10, 10];\n\n  // Non-constants\n  let numCircles,\n    circleSpeedRange,\n    circleRadius,\n    circles,\n    idCounter,\n    points,\n    delaunay,\n    delaunayData;\n\n  // Setup scene\n  function setupScene() {\n    numCircles = {\n      x: Math.floor(canvas.width / 150),\n      y: Math.floor(canvas.height / 150),\n    };\n\n    circleSpeedRange = [0.6, 0.9];\n    circleRadius = Math.min(0.005 * canvas.height, 7);\n    circles = [];\n    idCounter = 0;\n\n    points = [];\n    delaunay = undefined;\n\n    createCircles();\n  }\n\n  setupScene();\n  // Initialize update loop. Locked to specific FPS\n  let circlesUpdated = false;\n  setInterval(update, 1000 / fps);\n\n  requestAnimationFrame(render);\n\n  function update() {\n    const resized = resizeCanvas(canvas);\n    if (resized) {\n      // If canvas was resized, reset scene\n      setupScene();\n    }\n    points = [];\n    for (let i = 0; i < circles.length; i++) {\n      circles[i].update(canvas);\n      points.push(circles[i].position);\n    }\n    delaunay = new Delaunay(points, ctx);\n    circlesUpdated = true;\n  }\n\n  function draw() {\n    if (!circlesUpdated) return;\n    if (delaunay === undefined) return;\n    circlesUpdated = false;\n    // Clear canvas\n    // ctx.fillStyle = \"#f0f0f0\";\n    ctx.fillStyle = \"#6c63fa\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    // Get delaunay vertex/triangle data and draw triangles\n    const delaunayData = delaunay.getTriangleData();\n    drawTriangles(\n      ctx,\n      delaunayData.vertices,\n      delaunayData.triangles,\n      drawEdges\n    );\n\n    for (let i = 0; i < circles.length; i++) {\n      circles[i].draw(ctx);\n    }\n  }\n\n  function render() {\n    draw();\n    //resizeCanvas(canvas);\n    //console.log(canvas.width, canvas.height);\n\n    requestAnimationFrame(render);\n  }\n\n  function resizeCanvas(canvas) {\n    var realToCSSPixels = window.devicePixelRatio;\n    // Lookup the size the browser is displaying the canvas in CSS pixels\n    // and compute a size needed to make our drawingbuffer match it in\n    // device pixels.\n    var displayWidth = Math.floor(canvas.clientWidth * realToCSSPixels);\n    var displayHeight = Math.floor(canvas.clientHeight * realToCSSPixels);\n\n    // Check if the canvas is not the same size.\n    if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\n      // Make the canvas the same size\n      canvas.width = displayWidth;\n      canvas.height = displayHeight;\n      return true;\n    }\n    return false;\n  }\n\n  function createCircles() {\n    circles = [];\n    const dx = canvas.width / (numCircles.x + 1);\n    const dy = canvas.height / (numCircles.y + 1);\n\n    // console.log(canvas.width, canvas.height);\n    // console.log(numCircles);\n    // Create grid of circles\n    const offset = 2;\n    for (let i = 0; i <= numCircles.y + 1; i++) {\n      for (let j = 0; j <= numCircles.x + 1; j++) {\n        const pos = { x: j * dx, y: i * dy };\n        const direction = [1, -1];\n        const velocityX =\n          (Math.random() * (circleSpeedRange[1] - circleSpeedRange[0]) +\n            circleSpeedRange[0]) *\n          direction[Math.floor(Math.random() * 2)];\n        const velocityY =\n          (Math.random() * (circleSpeedRange[1] - circleSpeedRange[0]) +\n            circleSpeedRange[0]) *\n          direction[Math.floor(Math.random() * 2)];\n        const edgeCircle =\n          i === 0 || j === 0 || j === numCircles.x + 1 || i === numCircles.y + 1\n            ? true\n            : false;\n        const circle = new Circle({\n          id: idCounter,\n          color: circleColor,\n          radius: circleRadius,\n          position: pos,\n          velocity: { x: velocityX, y: velocityY },\n          staticObject: edgeCircle ? true : false,\n          visible: edgeCircle ? false : true,\n        });\n\n        idCounter++;\n        circles.push(circle);\n      }\n    }\n  }\n\n  function drawTriangles(ctx, vertices, triangles, drawEdges) {\n    for (let i = 0; i < triangles.length; i++) {\n      const triangle = triangles[i];\n      const [v1, v2, v3] = [\n        vertices[triangle[0]],\n        vertices[triangle[1]],\n        vertices[triangle[2]],\n      ];\n      ctx.beginPath();\n      ctx.moveTo(v1.x, v1.y);\n      ctx.lineTo(v2.x, v2.y);\n      ctx.lineTo(v3.x, v3.y);\n      const heightRatio = getTriangleMidpoint([v1, v2, v3]).y / canvas.height;\n      const lightness =\n        triangleBaseColor.l +\n        (heightRatio * (triangleColorRangeL[1] - triangleColorRangeL[0]) +\n          triangleColorRangeL[0]);\n      ctx.fillStyle = `hsl(${triangleBaseColor.h},${triangleBaseColor.s}%,${lightness}%)`;\n      ctx.fill();\n\n      ctx.strokeStyle = drawEdges ? circleColor : ctx.fillStyle;\n      ctx.lineTo(v1.x, v1.y);\n\n      ctx.lineWidth = lineWidth;\n      ctx.stroke();\n    }\n  }\n  function getTriangleMidpoint(vertices) {\n    let min = { x: undefined, y: undefined };\n    let max = { x: undefined, y: undefined };\n\n    for (let i = 0; i < vertices.length; i++) {\n      if (vertices[i].x < min.x || min.x === undefined) {\n        min.x = vertices[i].x;\n      }\n      if (vertices[i].x > max.x || max.x === undefined) {\n        max.x = vertices[i].x;\n      }\n      if (vertices[i].y < min.y || min.y === undefined) {\n        min.y = vertices[i].y;\n      }\n      if (vertices[i].y > max.y || max.y === undefined) {\n        max.y = vertices[i].y;\n      }\n    }\n    return { x: (max.x - min.x) / 2 + min.x, y: (max.y - min.y) / 2 + min.y };\n  }\n})();\n"]}