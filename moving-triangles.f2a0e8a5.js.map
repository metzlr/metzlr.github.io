{"version":3,"sources":["background/delaunay.js","background/moving-triangles.js"],"names":["pointInCircle","a","b","c","p","dx","x","dy","y","ex","ey","fx","fy","ap","bp","cp","sign","p1","p2","p3","pointInTriangle","pt","v1","v2","v3","d1","d2","d3","has_neg","has_pos","Node","key","vertices","children","node","push","TriangleGraph","nodes","Map","set","parentKeys","length","newNode","undefined","forEach","parentKey","parentNode","get","addChild","values","size","Vertex","pos","incEdge","id","HalfEdge","origin","twin","incFace","next","prev","Face","graphKey","Delaunay","points","debugCtx","halfEdges","faces","FAR_AWAY","tempPositions","i","triangleGraph","triangulate","point","triangle","containingTriangle","splitTriangle","newVertex","affectedEdges","edge","legalizeEdge","newHalfEdges","leftEdge","e1","e2","outerFaceEdges","getFaceHalfEdges","newFaces","e3","newFace","addNode","console","error","concat","face","adjacentFace","testPoint","incFaceEdge1","incFaceEdge2","faceEdge1","faceEdge2","getFaceVertices","currentNode","safety","foundChild","child","edges","Error","log","triangles","triangleIterator","getValues","value","ctx","beginPath","canvas","width","height","moveTo","lineTo","strokeStyle","lineWidth","stroke","Circle","color","radius","position","staticObject","visible","rotationSpeed","curveRate","angle","Math","random","PI","dAngle","rotationDirection","cos","sin","arc","fillStyle","fill","main","document","getElementById","getContext","resizeCanvas","fps","circleColor","drawEdges","gradientOptions","triangleColorGradient","floor","numCircles","circleCurveRateRange","circleSpeedRange","circleRadiusRange","circles","idCounter","delaunay","setupScene","dpr","window","devicePixelRatio","clientWidth","clientHeight","min","createCircles","circlesUpdated","setInterval","update","requestAnimationFrame","render","resized","draw","fillRect","delaunayData","getTriangleData","drawTriangles","realToCSSPixels","displayWidth","displayHeight","j","edgeCircle","circle","getGradientColor","color1","color2","ratio","w1","w2","rgb","round","heightRatio","getTriangleMidpoint","join","max"],"mappings":"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","file":"moving-triangles.f2a0e8a5.js","sourceRoot":"../src","sourcesContent":["function pointInCircle(a, b, c, p) {\n  const dx = a.x - p.x;\n  const dy = a.y - p.y;\n  const ex = b.x - p.x;\n  const ey = b.y - p.y;\n  const fx = c.x - p.x;\n  const fy = c.y - p.y;\n\n  const ap = dx * dx + dy * dy;\n  const bp = ex * ex + ey * ey;\n  const cp = fx * fx + fy * fy;\n\n  return (\n    dx * (ey * cp - bp * fy) -\n      dy * (ex * cp - bp * fx) +\n      ap * (ex * fy - ey * fx) <\n    0\n  );\n}\n\nfunction sign(p1, p2, p3) {\n  return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n}\n\nfunction pointInTriangle(pt, v1, v2, v3) {\n  const d1 = sign(pt, v1, v2);\n  const d2 = sign(pt, v2, v3);\n  const d3 = sign(pt, v3, v1);\n\n  const has_neg = d1 < 0 || d2 < 0 || d3 < 0;\n  const has_pos = d1 > 0 || d2 > 0 || d3 > 0;\n\n  return !(has_neg && has_pos);\n}\n\n/* \n  Directed Acylic Graph\n\n  Used to find what triangle a point is within\n*/\nclass Node {\n  constructor(key, vertices) {\n    this.key = key;\n    this.vertices = vertices;\n    this.children = [];\n  }\n\n  addChild(node) {\n    this.children.push(node);\n  }\n}\n\nclass TriangleGraph {\n  constructor(key, vertices) {\n    this.nodes = new Map();\n    this.nodes.set(key, new Node(key, vertices));\n  }\n\n  addNode(parentKeys, key, vertices) {\n    if (parentKeys.length == 0) return false;\n    let newNode = undefined;\n    parentKeys.forEach((parentKey) => {\n      const parentNode = this.nodes.get(parentKey);\n      if (parentNode) {\n        if (newNode == undefined) {\n          newNode = new Node(key, vertices);\n          this.nodes.set(key, newNode);\n        }\n        parentNode.addChild(newNode);\n      }\n    });\n    return true;\n  }\n\n  getValues() {\n    return this.nodes.values();\n  }\n\n  size() {\n    return this.nodes.size;\n  }\n}\n\nclass Vertex {\n  constructor(pos, incEdge, id) {\n    this.pos = pos;\n    this.incEdge = incEdge;\n    this.id = id;\n  }\n}\n\nclass HalfEdge {\n  constructor({ origin, twin, incFace, next, prev }) {\n    this.origin = origin;\n    this.twin = twin;\n    this.incFace = incFace;\n    this.next = next;\n    this.prev = prev;\n  }\n}\n\nclass Face {\n  constructor(incEdge, graphKey) {\n    this.incEdge = incEdge;\n    this.graphKey = graphKey;\n  }\n}\n\nclass Delaunay {\n  constructor(points, debugCtx) {\n    this.points = points;\n    this.debugCtx = debugCtx;\n\n    this.vertices = [];\n    this.halfEdges = [];\n    this.faces = []; // Contains index of a half-edge belonging to that face\n\n    // Create triangle base triangle that \"encapsulates\" all points\n    const FAR_AWAY = 100000;\n    const tempPositions = [\n      { x: -FAR_AWAY, y: -FAR_AWAY },\n      { x: 500, y: FAR_AWAY },\n      { x: FAR_AWAY, y: -FAR_AWAY },\n    ];\n    for (let i = 0; i < 3; i++) {\n      //this.vertices.push(new Vertex(`p${i}`, undefined));\n      this.vertices.push(\n        new Vertex(tempPositions[i], undefined, this.vertices.length)\n      );\n    }\n    for (let i = 0; i < 6; i++) {\n      this.halfEdges.push(\n        new HalfEdge({\n          origin: undefined,\n          twin: undefined,\n          incFace: undefined,\n          next: undefined,\n          prev: undefined,\n        })\n      );\n    }\n    this.faces.push(new Face(this.halfEdges[0], 0));\n    this.triangleGraph = new TriangleGraph(0, tempPositions);\n\n    // Now fill in proper values\n    this.vertices[0].incEdge = this.halfEdges[0];\n    this.vertices[1].incEdge = this.halfEdges[1];\n    this.vertices[2].incEdge = this.halfEdges[2];\n\n    this.halfEdges[0].origin = this.vertices[0];\n    this.halfEdges[0].twin = this.halfEdges[3];\n    this.halfEdges[0].incFace = this.faces[0];\n    this.halfEdges[0].next = this.halfEdges[1];\n    this.halfEdges[0].prev = this.halfEdges[2];\n\n    this.halfEdges[1].origin = this.vertices[1];\n    this.halfEdges[1].twin = this.halfEdges[4];\n    this.halfEdges[1].incFace = this.faces[0];\n    this.halfEdges[1].next = this.halfEdges[2];\n    this.halfEdges[1].prev = this.halfEdges[0];\n\n    this.halfEdges[2].origin = this.vertices[2];\n    this.halfEdges[2].twin = this.halfEdges[5];\n    this.halfEdges[2].incFace = this.faces[0];\n    this.halfEdges[2].next = this.halfEdges[0];\n    this.halfEdges[2].prev = this.halfEdges[1];\n\n    this.halfEdges[3].origin = this.vertices[1];\n    this.halfEdges[3].twin = this.halfEdges[0];\n    this.halfEdges[3].incFace = null;\n    this.halfEdges[3].next = this.halfEdges[4];\n    this.halfEdges[3].prev = this.halfEdges[5];\n\n    this.halfEdges[4].origin = this.vertices[2];\n    this.halfEdges[4].twin = this.halfEdges[1];\n    this.halfEdges[4].incFace = null;\n    this.halfEdges[4].next = this.halfEdges[5];\n    this.halfEdges[4].prev = this.halfEdges[3];\n\n    this.halfEdges[5].origin = this.vertices[0];\n    this.halfEdges[5].twin = this.halfEdges[2];\n    this.halfEdges[5].incFace = null;\n    this.halfEdges[5].next = this.halfEdges[3];\n    this.halfEdges[5].prev = this.halfEdges[4];\n\n    this.triangulate();\n  }\n\n  triangulate() {\n    for (let i = 0; i < this.points.length; i++) {\n      const point = this.points[i];\n      const triangle = this.containingTriangle(point);\n      if (triangle === undefined) break;\n\n      /* Need case for when point lies on edge of triangle? */\n\n      const [newVertex, affectedEdges] = this.splitTriangle(point, triangle);\n\n      affectedEdges.forEach((edge) => {\n        this.legalizeEdge(newVertex, edge);\n      });\n    }\n  }\n\n  splitTriangle(point, triangle) {\n    // First create new vertex from point\n    const newVertex = new Vertex(point, undefined, this.vertices.length);\n\n    // Next create half-edges\n    let newHalfEdges = [];\n    for (let i = 0; i < 6; i++) {\n      let leftEdge = i % 2 == 0 ? true : false;\n      newHalfEdges.push(\n        new HalfEdge({\n          origin: leftEdge ? newVertex : undefined,\n          twin: undefined,\n          incFace: undefined,\n          next: undefined,\n          prev: undefined,\n        })\n      );\n    }\n    // Assign half-edge twins\n    for (let i = 0; i < 3; i++) {\n      const e1 = newHalfEdges[i * 2];\n      const e2 = i == 0 ? newHalfEdges[5] : newHalfEdges[i * 2 - 1];\n      e1.twin = e2;\n      e2.twin = e1;\n    }\n\n    // Now create each new face and re-assign relevant next/prev edges\n    const outerFaceEdges = this.getFaceHalfEdges(triangle);\n    let newFaces = [];\n    for (let i = 0; i < 3; i++) {\n      let e1 = outerFaceEdges[i];\n      let e2 = newHalfEdges[i * 2 + 1];\n      let e3 = newHalfEdges[i * 2];\n      const newFace = new Face(e3, this.faces.length + i);\n\n      e2.origin = e1.next.origin;\n\n      e1.next = e2;\n      e1.prev = e3;\n      e1.incFace = newFace;\n      e2.next = e3;\n      e2.prev = e1;\n      e2.incFace = newFace;\n      e3.next = e1;\n      e3.prev = e2;\n      e3.incFace = newFace;\n\n      newFaces.push(newFace);\n      const vertices = [e1.origin.id, e2.origin.id, e3.origin.id];\n      if (\n        !this.triangleGraph.addNode(\n          [triangle.graphKey],\n          newFace.graphKey,\n          vertices\n        )\n      ) {\n        console.error(\"Error adding face to triangle graph:\", newFace);\n      }\n    }\n\n    // Point vertex to first new half-edge\n    newVertex.incEdge = newHalfEdges[0];\n\n    // Add new items\n    this.vertices.push(newVertex);\n    this.halfEdges = this.halfEdges.concat(newHalfEdges);\n    this.faces = this.faces.concat(newFaces);\n\n    return [newVertex, outerFaceEdges];\n  }\n\n  legalizeEdge(newVertex, edge) {\n    const face = edge.incFace;\n    const adjacentFace = edge.twin.incFace;\n    if (adjacentFace == null) {\n      return;\n    } else {\n      // Check if edge needs to be flipped\n      const testPoint = edge.twin.prev.origin.pos;\n      if (\n        pointInCircle(\n          newVertex.pos,\n          edge.origin.pos,\n          edge.twin.origin.pos,\n          testPoint\n        )\n      ) {\n        const incFaceEdge1 = edge.twin.prev;\n        const incFaceEdge2 = edge.twin.next;\n        const faceEdge1 = edge.next;\n        const faceEdge2 = edge.prev;\n\n        // Flip edge\n        edge.next = incFaceEdge1;\n        edge.prev = faceEdge1;\n        edge.twin.next = faceEdge2;\n        edge.twin.prev = incFaceEdge2;\n        edge.origin = faceEdge2.origin;\n        edge.twin.origin = incFaceEdge1.origin;\n\n        // Correct Edges\n        incFaceEdge1.prev = edge;\n        incFaceEdge1.next = faceEdge1;\n        faceEdge1.prev = incFaceEdge1;\n        faceEdge1.next = edge;\n\n        faceEdge2.prev = edge.twin;\n        faceEdge2.next = incFaceEdge2;\n        incFaceEdge2.prev = faceEdge2;\n        incFaceEdge2.next = edge.twin;\n\n        // Create two new faces\n        const newFaces = [\n          new Face(faceEdge2, this.faces.length),\n          new Face(faceEdge1, this.faces.length + 1),\n        ];\n        edge.twin.incFace = newFaces[0];\n        faceEdge2.incFace = newFaces[0];\n        incFaceEdge2.incFace = newFaces[0];\n        edge.incFace = newFaces[1];\n        incFaceEdge1.incFace = newFaces[1];\n        faceEdge1.incFace = newFaces[1];\n\n        for (const newFace of newFaces) {\n          const [v1, v2, v3] = this.getFaceVertices(newFace);\n          if (\n            !this.triangleGraph.addNode(\n              [face.graphKey, adjacentFace.graphKey],\n              newFace.graphKey,\n              [v1.id, v2.id, v3.id]\n            )\n          ) {\n            console.error(\"Error adding face to triangle graph:\", newFace);\n          }\n          this.faces.push(newFace);\n        }\n\n        // Since edge flip could have affected triangles next to original adjacent triangle, check them\n        this.legalizeEdge(newVertex, incFaceEdge1);\n        this.legalizeEdge(newVertex, incFaceEdge2);\n      }\n    }\n  }\n\n  containingTriangle(point) {\n    let currentNode = this.triangleGraph.nodes.get(0);\n    let safety = 0;\n    while (currentNode.children.length > 0) {\n      let foundChild = false;\n      for (const child of currentNode.children) {\n        //const vertices = child.vertices;\n        const vertices = [\n          this.vertices[child.vertices[0]].pos,\n          this.vertices[child.vertices[1]].pos,\n          this.vertices[child.vertices[2]].pos,\n        ];\n        if (pointInTriangle(point, vertices[0], vertices[1], vertices[2])) {\n          currentNode = child;\n          foundChild = true;\n          break;\n        }\n      }\n      if (!foundChild) {\n        console.error(\"Uh oh. Triangle had children but none matched.\", point);\n        return undefined;\n      }\n\n      safety++;\n      if (safety > 10000) {\n        console.error(\"Infinite loop here\");\n        break;\n      }\n    }\n    return this.faces[currentNode.key];\n  }\n\n  getFaceHalfEdges(face) {\n    let edges = [face.incEdge];\n    let edge = edges[0];\n\n    let safety = 0;\n    while (edge.next.origin != edges[0].origin) {\n      edges.push(edge.next);\n      edge = edge.next;\n\n      safety++;\n      if (safety > 10000) {\n        console.error(\"Infinite loop here\");\n        break;\n      }\n    }\n    return edges;\n  }\n\n  getFaceVertices(face) {\n    let edge = face.incEdge;\n    let vertices = [edge.origin];\n\n    let safety = 0;\n    while (edge.next.origin != vertices[0]) {\n      edge = edge.next;\n      vertices.push(edge.origin);\n\n      safety++;\n      if (safety > 10000) {\n        throw new Error(\"Infinite loop here\");\n      }\n    }\n    return vertices;\n  }\n\n  printFace(face) {\n    const edges = this.getFaceHalfEdges(face);\n    console.log(\"FACE INDEX:\", face);\n    for (let i = 0; i < edges.length; i++) {\n      console.log(edges[i].origin.pos, \"TO\", edges[i].twin.origin.pos);\n      console.log(edges[i]);\n    }\n  }\n\n  getTriangleData() {\n    let vertices = [];\n    for (let i = 3; i < this.vertices.length; i++) {\n      vertices.push(this.vertices[i].pos);\n    }\n    let triangles = [];\n    const triangleIterator = this.triangleGraph.getValues();\n    for (let i = 0; i < this.triangleGraph.size(); i++) {\n      const triangle = triangleIterator.next().value;\n      if (triangle.children.length != 0) continue;\n      const [v1, v2, v3] = triangle.vertices;\n      if (v1 < 3 || v2 < 3 || v3 < 3) continue;\n      triangles.push([v1 - 3, v2 - 3, v3 - 3]);\n    }\n    return { vertices: vertices, triangles: triangles };\n  }\n\n  debugDraw(ctx) {\n    // // Clear canvas\n    // ctx.fillStyle = \"#f0f0f0\";\n    // ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    for (const face of this.faces) {\n      const edges = this.getFaceHalfEdges(face);\n      for (const edge of edges) {\n        ctx.beginPath();\n        let v1 = [edge.origin.pos.x, edge.origin.pos.y];\n        let v2 = [edge.twin.origin.pos.x, edge.twin.origin.pos.y];\n        let p1 = [ctx.canvas.width * -5, ctx.canvas.height * -5];\n        let p2 = [ctx.canvas.width * 5, ctx.canvas.height * -5];\n        let p3 = [ctx.canvas.width / 2, ctx.canvas.height * 5];\n        if (typeof edge.origin.pos === \"string\") {\n          if (edge.origin.pos === \"p0\") {\n            v1 = p1;\n          } else if (edge.origin.pos === \"p1\") {\n            v1 = p2;\n          } else {\n            v1 = p3;\n          }\n        }\n        if (typeof edge.twin.origin.pos === \"string\") {\n          if (edge.twin.origin.pos === \"p0\") {\n            v2 = p1;\n          } else if (edge.twin.origin.pos === \"p1\") {\n            v2 = p2;\n          } else {\n            v2 = p3;\n          }\n        }\n\n        ctx.moveTo(v1[0], v1[1]);\n        ctx.lineTo(v2[0], v2[1]);\n        ctx.strokeStyle = \"green\";\n        ctx.lineWidth = 2;\n        ctx.stroke();\n      }\n    }\n  }\n}\n\nexport default Delaunay;\n","import Delaunay from \"./delaunay\";\n\nclass Circle {\n  constructor({\n    id,\n    color,\n    radius,\n    position,\n    staticObject,\n    visible,\n    rotationSpeed,\n    curveRate,\n  }) {\n    this.id = id;\n    this.color = color;\n    this.radius = radius;\n    this.position = position;\n    this.staticObject = staticObject;\n    this.visible = visible;\n\n    this.angle = Math.random() * Math.PI * 2;\n    this.dAngle = (Math.random() > 0.5 ? 1 : -1) * curveRate;\n    this.rotationDirection = {\n      x: (Math.random() > 0.5 ? 1 : -1) * rotationSpeed,\n      y: (Math.random() > 0.5 ? 1 : -1) * rotationSpeed,\n    };\n  }\n\n  update(canvas) {\n    if (this.staticObject) return;\n\n    this.position.x +=\n      this.rotationDirection.x * Math.cos(this.angle + this.dAngle);\n    this.position.y +=\n      this.rotationDirection.y * Math.sin(this.angle + this.dAngle);\n\n    this.angle += this.dAngle;\n    if (this.angle >= Math.PI * 2) {\n      this.angle = 0;\n    }\n    if (Math.random() > 0.99) {\n      this.dAngle *= -1;\n    }\n    if (\n      this.position.x - this.radius < 0 ||\n      this.position.x + this.radius > canvas.width\n    ) {\n      this.rotationDirection.x *= -1;\n    }\n    if (\n      this.position.y - this.radius < 0 ||\n      this.position.y + this.radius > canvas.height\n    ) {\n      this.rotationDirection.y *= -1;\n    }\n  }\n\n  draw(ctx) {\n    if (!this.visible) return;\n    ctx.beginPath();\n    ctx.arc(this.position.x, this.position.y, this.radius, 0, 2 * Math.PI);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n  }\n}\n\nconst main = (function () {\n  const canvas = document.getElementById(\"background-canvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  resizeCanvas(canvas);\n\n  // Constants\n  const fps = 60;\n  const circleColor = \"#edededbb\";\n  const drawEdges = false;\n  const lineWidth = 1;\n  const gradientOptions = [\n    [\n      [87, 250, 160],\n      [87, 75, 250],\n    ],\n    [\n      [200, 200, 200],\n      [40, 40, 40],\n    ],\n    [\n      [0, 219, 222],\n      [252, 0, 255],\n    ],\n  ];\n  const triangleColorGradient =\n    gradientOptions[Math.floor(gradientOptions.length * Math.random())];\n\n  // Non-constants\n  let numCircles,\n    circleCurveRateRange,\n    circleSpeedRange,\n    circleRadiusRange,\n    circles,\n    idCounter,\n    points,\n    delaunay;\n\n  // Setup scene\n  function setupScene() {\n    // Spacing should not be larger on higher-res displays, so use client width and height to calculate number of circles. Other factors, however, should be scaled based on devicePixelRatio\n    const dpr = window.devicePixelRatio;\n    numCircles = {\n      x: Math.floor(canvas.clientWidth / 150),\n      y: Math.floor(canvas.clientHeight / 150),\n    };\n    circleCurveRateRange = [0.005, 0.02];\n    circleSpeedRange = [0.5 * dpr, 1 * dpr];\n    circleRadiusRange = [\n      Math.min(0.0025 * canvas.height, 7 * dpr),\n      Math.min(0.0065 * canvas.height, 9 * dpr),\n    ];\n\n    circles = [];\n    idCounter = 0;\n\n    points = [];\n    delaunay = undefined;\n\n    createCircles();\n  }\n\n  setupScene();\n  // Initialize update loop. Locked to specific FPS\n  let circlesUpdated = false;\n  setInterval(update, 1000 / fps);\n\n  requestAnimationFrame(render);\n\n  function update() {\n    const resized = resizeCanvas(canvas);\n    if (resized) {\n      setupScene();\n    }\n    points = [];\n    for (let i = 0; i < circles.length; i++) {\n      circles[i].update(canvas);\n      points.push(circles[i].position);\n    }\n    delaunay = new Delaunay(points, ctx);\n    circlesUpdated = true;\n  }\n\n  function draw() {\n    if (!circlesUpdated) return;\n    if (delaunay === undefined) return;\n    circlesUpdated = false;\n    // Clear canvas\n    ctx.fillStyle = \"#f0f0f0\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    const delaunayData = delaunay.getTriangleData();\n    drawTriangles(\n      ctx,\n      delaunayData.vertices,\n      delaunayData.triangles,\n      drawEdges\n    );\n\n    for (let i = 0; i < circles.length; i++) {\n      circles[i].draw(ctx);\n    }\n  }\n\n  function render() {\n    draw();\n\n    requestAnimationFrame(render);\n  }\n\n  function resizeCanvas(canvas) {\n    var realToCSSPixels = window.devicePixelRatio;\n    // Lookup the size the browser is displaying the canvas in CSS pixels\n    // and compute a size needed to make our drawingbuffer match it in\n    // device pixels.\n    var displayWidth = Math.floor(canvas.clientWidth * realToCSSPixels);\n    var displayHeight = Math.floor(canvas.clientHeight * realToCSSPixels);\n    // Check if the canvas is not the same size.\n    if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\n      // Make the canvas the same size\n      canvas.width = displayWidth;\n      canvas.height = displayHeight;\n      return true;\n    }\n    return false;\n  }\n\n  function createCircles() {\n    circles = [];\n    const dx = canvas.width / (numCircles.x + 1);\n    const dy = canvas.height / (numCircles.y + 1);\n\n    // Create grid of circles\n    for (let i = 0; i <= numCircles.y + 1; i++) {\n      for (let j = 0; j <= numCircles.x + 1; j++) {\n        const pos = { x: j * dx, y: i * dy };\n        const rotationSpeed =\n          Math.random() * (circleSpeedRange[1] - circleSpeedRange[0]) +\n          circleSpeedRange[0];\n        const curveRate =\n          Math.random() * (circleCurveRateRange[1] - circleCurveRateRange[0]) +\n          circleCurveRateRange[0];\n        const edgeCircle =\n          i === 0 || j === 0 || j === numCircles.x + 1 || i === numCircles.y + 1\n            ? true\n            : false;\n        const circle = new Circle({\n          id: idCounter,\n          color: circleColor,\n          radius:\n            Math.random() * (circleRadiusRange[1] - circleRadiusRange[0]) +\n            circleRadiusRange[0],\n          position: pos,\n          rotationSpeed: rotationSpeed,\n          staticObject: edgeCircle ? true : false,\n          visible: edgeCircle ? false : true,\n          curveRate: curveRate,\n        });\n\n        idCounter++;\n        circles.push(circle);\n      }\n    }\n  }\n\n  function getGradientColor(color1, color2, ratio) {\n    var w1 = ratio;\n    var w2 = 1 - w1;\n    var rgb = [\n      Math.round(color1[0] * w1 + color2[0] * w2),\n      Math.round(color1[1] * w1 + color2[1] * w2),\n      Math.round(color1[2] * w1 + color2[2] * w2),\n    ];\n    return rgb;\n  }\n\n  function drawTriangles(ctx, vertices, triangles, drawEdges) {\n    for (let i = 0; i < triangles.length; i++) {\n      const triangle = triangles[i];\n      const [v1, v2, v3] = [\n        vertices[triangle[0]],\n        vertices[triangle[1]],\n        vertices[triangle[2]],\n      ];\n      ctx.beginPath();\n      ctx.moveTo(v1.x, v1.y);\n      ctx.lineTo(v2.x, v2.y);\n      ctx.lineTo(v3.x, v3.y);\n      const heightRatio = getTriangleMidpoint([v1, v2, v3]).y / canvas.height;\n      const color = getGradientColor(\n        triangleColorGradient[0],\n        triangleColorGradient[1],\n        heightRatio\n      );\n      ctx.fillStyle = `rgb(${color.join()})`;\n      ctx.fill();\n\n      ctx.strokeStyle = drawEdges ? circleColor : ctx.fillStyle;\n      ctx.lineTo(v1.x, v1.y);\n\n      ctx.lineWidth = lineWidth;\n      ctx.stroke();\n    }\n  }\n  function getTriangleMidpoint(vertices) {\n    let min = { x: undefined, y: undefined };\n    let max = { x: undefined, y: undefined };\n\n    for (let i = 0; i < vertices.length; i++) {\n      if (vertices[i].x < min.x || min.x === undefined) {\n        min.x = vertices[i].x;\n      }\n      if (vertices[i].x > max.x || max.x === undefined) {\n        max.x = vertices[i].x;\n      }\n      if (vertices[i].y < min.y || min.y === undefined) {\n        min.y = vertices[i].y;\n      }\n      if (vertices[i].y > max.y || max.y === undefined) {\n        max.y = vertices[i].y;\n      }\n    }\n    return { x: (max.x - min.x) / 2 + min.x, y: (max.y - min.y) / 2 + min.y };\n  }\n})();\n"]}